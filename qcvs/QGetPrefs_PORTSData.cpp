/**********************************************************************

	--- Qt Architect generated file ---

	File: QGetPrefs_PORTSData.cpp
	Last generated: Mon Nov 23 23:14:25 1998

	DO NOT EDIT!!!  This file will be automatically
	regenerated by qtarch.  All changes will be lost.

 *********************************************************************/

#include <qpixmap.h>
#include <qlayout.h>
#include "QGetPrefs_PORTSData.h"

#define Inherited QDialog


QGetPrefs_PORTSData::QGetPrefs_PORTSData
(
	QWidget* parent,
	const char* name
)
	:
	Inherited( parent, name, TRUE, 0 )
{
	fShellPortCheck = new QCheckBox( this, "CheckBox_6" );
	fShellPortCheck->setGeometry( 5, 13, 253, 30 );
	fShellPortCheck->setMinimumSize( 0, 0 );
	fShellPortCheck->setMaximumSize( 32767, 30 );
	connect( fShellPortCheck, SIGNAL(toggled(bool)), SLOT(ToggleShellPort(bool)) );
	fShellPortCheck->setFocusPolicy( QWidget::TabFocus );
	fShellPortCheck->setBackgroundMode( QWidget::PaletteBackground );
	fShellPortCheck->setFontPropagation( QWidget::NoChildren );
	fShellPortCheck->setPalettePropagation( QWidget::NoChildren );
	fShellPortCheck->setText( "Change the ""shell"" port (.rhosts) :" );
	fShellPortCheck->setAutoRepeat( FALSE );
	fShellPortCheck->setAutoResize( FALSE );

	fShellPort = new QLineEdit( this, "LineEdit_1" );
	fShellPort->setGeometry( 263, 13, 126, 30 );
	fShellPort->setMinimumSize( 0, 0 );
	fShellPort->setMaximumSize( 32767, 30 );
	fShellPort->setFocusPolicy( QWidget::StrongFocus );
	fShellPort->setBackgroundMode( QWidget::PaletteBase );
	fShellPort->setFontPropagation( QWidget::NoChildren );
	fShellPort->setPalettePropagation( QWidget::NoChildren );
	fShellPort->setText( "" );
	fShellPort->setMaxLength( 32767 );
	fShellPort->setEchoMode( QLineEdit::Normal );
	fShellPort->setFrame( TRUE );

	fPserverPortCheck = new QCheckBox( this, "CheckBox_7" );
	fPserverPortCheck->setGeometry( 5, 64, 253, 30 );
	fPserverPortCheck->setMinimumSize( 0, 0 );
	fPserverPortCheck->setMaximumSize( 32767, 30 );
	connect( fPserverPortCheck, SIGNAL(toggled(bool)), SLOT(TogglePserverPort(bool)) );
	fPserverPortCheck->setFocusPolicy( QWidget::TabFocus );
	fPserverPortCheck->setBackgroundMode( QWidget::PaletteBackground );
	fPserverPortCheck->setFontPropagation( QWidget::NoChildren );
	fPserverPortCheck->setPalettePropagation( QWidget::NoChildren );
	fPserverPortCheck->setText( "Change the ""pserver"" port (password) :" );
	fPserverPortCheck->setAutoRepeat( FALSE );
	fPserverPortCheck->setAutoResize( FALSE );

	fServerPort = new QLineEdit( this, "LineEdit_2" );
	fServerPort->setGeometry( 263, 64, 126, 30 );
	fServerPort->setMinimumSize( 0, 0 );
	fServerPort->setMaximumSize( 32767, 30 );
	fServerPort->setFocusPolicy( QWidget::StrongFocus );
	fServerPort->setBackgroundMode( QWidget::PaletteBase );
	fServerPort->setFontPropagation( QWidget::NoChildren );
	fServerPort->setPalettePropagation( QWidget::NoChildren );
	fServerPort->setText( "" );
	fServerPort->setMaxLength( 32767 );
	fServerPort->setEchoMode( QLineEdit::Normal );
	fServerPort->setFrame( TRUE );

	fKerberosPortCheck = new QCheckBox( this, "CheckBox_8" );
	fKerberosPortCheck->setGeometry( 5, 115, 253, 30 );
	fKerberosPortCheck->setMinimumSize( 0, 0 );
	fKerberosPortCheck->setMaximumSize( 32767, 30 );
	connect( fKerberosPortCheck, SIGNAL(toggled(bool)), SLOT(ToggleKerberosPort(bool)) );
	fKerberosPortCheck->setFocusPolicy( QWidget::TabFocus );
	fKerberosPortCheck->setBackgroundMode( QWidget::PaletteBackground );
	fKerberosPortCheck->setFontPropagation( QWidget::NoChildren );
	fKerberosPortCheck->setPalettePropagation( QWidget::NoChildren );
	fKerberosPortCheck->setText( "Change the ""kerberos"" port (kserver) :" );
	fKerberosPortCheck->setAutoRepeat( FALSE );
	fKerberosPortCheck->setAutoResize( FALSE );

	fKerberosPort = new QLineEdit( this, "LineEdit_3" );
	fKerberosPort->setGeometry( 263, 115, 126, 30 );
	fKerberosPort->setMinimumSize( 0, 0 );
	fKerberosPort->setMaximumSize( 32767, 30 );
	fKerberosPort->setFocusPolicy( QWidget::StrongFocus );
	fKerberosPort->setBackgroundMode( QWidget::PaletteBase );
	fKerberosPort->setFontPropagation( QWidget::NoChildren );
	fKerberosPort->setPalettePropagation( QWidget::NoChildren );
	fKerberosPort->setText( "" );
	fKerberosPort->setMaxLength( 32767 );
	fKerberosPort->setEchoMode( QLineEdit::Normal );
	fKerberosPort->setFrame( TRUE );

	fAltServerCheck = new QCheckBox( this, "CheckBox_9" );
	fAltServerCheck->setGeometry( 5, 166, 337, 30 );
	fAltServerCheck->setMinimumSize( 0, 0 );
	fAltServerCheck->setMaximumSize( 32767, 30 );
	connect( fAltServerCheck, SIGNAL(toggled(bool)), SLOT(ToggleServerName(bool)) );
	fAltServerCheck->setFocusPolicy( QWidget::TabFocus );
	fAltServerCheck->setBackgroundMode( QWidget::PaletteBackground );
	fAltServerCheck->setFontPropagation( QWidget::NoChildren );
	fAltServerCheck->setPalettePropagation( QWidget::NoChildren );
	fAltServerCheck->setText( "Set an alternate server name :" );
	fAltServerCheck->setAutoRepeat( FALSE );
	fAltServerCheck->setAutoResize( FALSE );

	fServerName = new QLineEdit( this, "LineEdit_4" );
	fServerName->setGeometry( 347, 166, 168, 30 );
	fServerName->setMinimumSize( 0, 0 );
	fServerName->setMaximumSize( 32767, 30 );
	fServerName->setFocusPolicy( QWidget::StrongFocus );
	fServerName->setBackgroundMode( QWidget::PaletteBase );
	fServerName->setFontPropagation( QWidget::NoChildren );
	fServerName->setPalettePropagation( QWidget::NoChildren );
	fServerName->setText( "" );
	fServerName->setMaxLength( 32767 );
	fServerName->setEchoMode( QLineEdit::Normal );
	fServerName->setFrame( TRUE );

	fAltRshCheck = new QCheckBox( this, "CheckBox_10" );
	fAltRshCheck->setGeometry( 5, 217, 337, 30 );
	fAltRshCheck->setMinimumSize( 0, 0 );
	fAltRshCheck->setMaximumSize( 32767, 30 );
	connect( fAltRshCheck, SIGNAL(toggled(bool)), SLOT(ToggleRshName(bool)) );
	fAltRshCheck->setFocusPolicy( QWidget::TabFocus );
	fAltRshCheck->setBackgroundMode( QWidget::PaletteBackground );
	fAltRshCheck->setFontPropagation( QWidget::NoChildren );
	fAltRshCheck->setPalettePropagation( QWidget::NoChildren );
	fAltRshCheck->setText( "Set an alternate rsh name :" );
	fAltRshCheck->setAutoRepeat( FALSE );
	fAltRshCheck->setAutoResize( FALSE );

	fRshName = new QLineEdit( this, "LineEdit_5" );
	fRshName->setGeometry( 347, 217, 168, 30 );
	fRshName->setMinimumSize( 0, 0 );
	fRshName->setMaximumSize( 32767, 30 );
	fRshName->setFocusPolicy( QWidget::StrongFocus );
	fRshName->setBackgroundMode( QWidget::PaletteBase );
	fRshName->setFontPropagation( QWidget::NoChildren );
	fRshName->setPalettePropagation( QWidget::NoChildren );
	fRshName->setText( "" );
	fRshName->setMaxLength( 32767 );
	fRshName->setEchoMode( QLineEdit::Normal );
	fRshName->setFrame( TRUE );

	QGridLayout* qtarch_layout_1 = new QGridLayout( this, 5, 1, 5, 5, NULL );
	qtarch_layout_1->addColSpacing( 0, 5 );
	qtarch_layout_1->setColStretch( 0, 1 );
	qtarch_layout_1->addRowSpacing( 0, 0 );
	qtarch_layout_1->setRowStretch( 0, 1 );
	QBoxLayout* qtarch_layout_1_1_1 = new QBoxLayout( QBoxLayout::LeftToRight, 5, NULL );
	qtarch_layout_1->addLayout( qtarch_layout_1_1_1, 0, 0 );
	qtarch_layout_1_1_1->addStrut( 0 );
	qtarch_layout_1_1_1->addWidget( fShellPortCheck, 2, 36 );
	qtarch_layout_1_1_1->addWidget( fShellPort, 1, 36 );
	qtarch_layout_1_1_1->addStretch( 1 );
	qtarch_layout_1->addRowSpacing( 1, 0 );
	qtarch_layout_1->setRowStretch( 1, 1 );
	QBoxLayout* qtarch_layout_1_2_1 = new QBoxLayout( QBoxLayout::LeftToRight, 5, NULL );
	qtarch_layout_1->addLayout( qtarch_layout_1_2_1, 1, 0 );
	qtarch_layout_1_2_1->addStrut( 0 );
	qtarch_layout_1_2_1->addWidget( fPserverPortCheck, 2, 36 );
	qtarch_layout_1_2_1->addWidget( fServerPort, 1, 36 );
	qtarch_layout_1_2_1->addStretch( 1 );
	qtarch_layout_1->addRowSpacing( 2, 0 );
	qtarch_layout_1->setRowStretch( 2, 1 );
	QBoxLayout* qtarch_layout_1_3_1 = new QBoxLayout( QBoxLayout::LeftToRight, 5, NULL );
	qtarch_layout_1->addLayout( qtarch_layout_1_3_1, 2, 0 );
	qtarch_layout_1_3_1->addStrut( 0 );
	qtarch_layout_1_3_1->addWidget( fKerberosPortCheck, 2, 36 );
	qtarch_layout_1_3_1->addWidget( fKerberosPort, 1, 36 );
	qtarch_layout_1_3_1->addStretch( 1 );
	qtarch_layout_1->addRowSpacing( 3, 0 );
	qtarch_layout_1->setRowStretch( 3, 1 );
	QBoxLayout* qtarch_layout_1_4_1 = new QBoxLayout( QBoxLayout::LeftToRight, 5, NULL );
	qtarch_layout_1->addLayout( qtarch_layout_1_4_1, 3, 0 );
	qtarch_layout_1_4_1->addStrut( 0 );
	qtarch_layout_1_4_1->addWidget( fAltServerCheck, 2, 36 );
	qtarch_layout_1_4_1->addWidget( fServerName, 1, 36 );
	qtarch_layout_1->addRowSpacing( 4, 0 );
	qtarch_layout_1->setRowStretch( 4, 1 );
	QBoxLayout* qtarch_layout_1_5_1 = new QBoxLayout( QBoxLayout::LeftToRight, 5, NULL );
	qtarch_layout_1->addLayout( qtarch_layout_1_5_1, 4, 0 );
	qtarch_layout_1_5_1->addStrut( 0 );
	qtarch_layout_1_5_1->addWidget( fAltRshCheck, 2, 36 );
	qtarch_layout_1_5_1->addWidget( fRshName, 1, 36 );
	resize( 520,260 );
	setMinimumSize( 0, 0 );
	setMaximumSize( 32767, 32767 );
}


QGetPrefs_PORTSData::~QGetPrefs_PORTSData()
{
}
void QGetPrefs_PORTSData::ToggleShellPort(bool)
{
}
void QGetPrefs_PORTSData::TogglePserverPort(bool)
{
}
void QGetPrefs_PORTSData::ToggleKerberosPort(bool)
{
}
void QGetPrefs_PORTSData::ToggleServerName(bool)
{
}
void QGetPrefs_PORTSData::ToggleRshName(bool)
{
}
